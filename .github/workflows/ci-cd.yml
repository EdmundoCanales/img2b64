name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  lint-and-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      # Install Python & deps
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: pip install -r requirements.txt
      - run: pip install -e .
      - run: pip install pytest flake8
      - run: flake8 img2b64 tests/
      - run: black .
      - run: ruff check . --fix
      - run: pytest -q

  build-exe:
    needs: lint-and-test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with: 
            python-version: '3.9'
      - run: pip install pyinstaller

      # Create one-file executable
      - run: |
          pyinstaller --onefile --console `
            --name img2b64 `
            --icon img2b64/app.ico `
            img2b64/img2b64.py

      # Upload the EXE as a build artifact
      - uses: actions/upload-artifact@v4
        with:
          name: img2b64-executable
          path: dist/img2b64.exe

  release:
    if: github.event_name == 'release'
    needs: build-exe
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: img2b64-executable
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/img2b64.exe
          asset_name: img2b64-${{ github.event.release.tag_name }}.exe
          asset_content_type: application/octet-stream
